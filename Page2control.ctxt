#BlueJ class context
comment0.target=Page2control
comment0.text=\n\ Class\ to\ load\ the\ fxml\ file\ for\ the\ second\ page\ in\ the\ application.\n\n\ @author\ Galin\ Mihaylov,\ Ricky\ Brown,\ Reuben\ Atendido,\ Oliver\ Macpherson\n
comment1.params=
comment1.target=void\ initialize()
comment1.text=\n\ Adds\ all\ toggle\ buttons\ to\ the\ hashset\ and\ to\ the\ hashmap.\n\ Loads\ all\ the\ property\ data\ from\ the\ csv\ file.\n\ Sets\ the\ initial\ colour\ of\ each\ toggle\ button.\n
comment10.params=event
comment10.target=void\ viewPropertiesButton(javafx.event.ActionEvent)
comment10.text=\n\ Load\ up\ a\ new\ window\ containing\ the\ property\ information\ for\ the\ toggle\ button\ selected.\n\ If\ there\ are\ zero\ properties\ available\ based\ on\ the\ filter\ and\ selected\ toggle\ button\n\ then\ an\ alert\ shows.\n\ If\ a\ property\ in\ the\ list\ is\ selected,\ a\ new\ window\ displays\ the\ description\ of\ that\ property.\n
comment11.params=listing
comment11.target=javafx.scene.control.Button\ viewOnMapButton(AirbnbListing)
comment11.text=\n\ Creates\ a\ button\ which\ upon\ being\ pressed,\ shows\ the\ location\ of\ the\ property\ on\ google\ maps.\n\ @param\ listing\ The\ property\ to\ be\ shown\ the\ location\ of.\n\ @return\ The\ created\ button.\n
comment12.params=event
comment12.target=void\ handle(javafx.event.ActionEvent)
comment13.params=
comment13.target=void\ addToHashMap()
comment13.text=\n\ Adds\ all\ the\ toggle\ buttons\ to\ a\ hashmap\ with\ their\ corresponding\ borough\ names\n\ as\ their\ values.\n
comment14.params=
comment14.target=void\ addButtonsToHashSet()
comment14.text=\n\ Adds\ all\ the\ toggle\ buttons\ to\ a\ hashset.\n
comment15.params=min
comment15.target=void\ setMinPrice(int)
comment15.text=\n\ Set\ the\ minimum\ price.\n\ @param\ min\ The\ price\ which\ minPrice\ is\ to\ be\ set\ to.\n
comment16.params=max
comment16.target=void\ setMaxPrice(int)
comment16.text=\n\ Set\ the\ maximum\ price.\n\ @param\ max\ The\ price\ which\ maxPrice\ is\ to\ be\ set\ to.\n
comment2.params=
comment2.target=javafx.scene.layout.Pane\ createPage()
comment2.text=\n\ Loads\ the\ fxml\ file.\n\ @return\ the\ fxml\ file\ as\ a\ Pane\n
comment3.params=borough
comment3.target=int\ getNumberOfProperties(javafx.scene.control.ToggleButton)
comment3.text=\n\ Gets\ the\ number\ of\ properties\ in\ a\ borough.\n\ @param\ borough\ A\ toggle\ button\ for\ which\ the\ number\ of\ properties\ is\ wanted.\n\ @return\ The\ number\ of\ properties\ in\ the\ borough\ which\ the\ toggle\ button\ corresponds\ to.\n
comment4.params=borough
comment4.target=int\ getNumberOfFilteredProperties(javafx.scene.control.ToggleButton)
comment4.text=\n\ Gets\ the\ number\ of\ properties\ in\ a\ borough\ based\ on\ the\ filters\ set\ by\ the\ user.\n\ @param\ borough\ A\ toggle\ button\ for\ which\ the\ number\ of\ properties\ is\ wanted.\n\ @return\ The\ number\ of\ properties\ in\ the\ borough\ which\ the\ toggle\ button\ corresponds\ to.\n
comment5.params=borough
comment5.target=void\ locationFilter(javafx.scene.control.ToggleButton)
comment5.text=\n\ Adds\ the\ properties\ which\ fall\ within\ the\ filters\ set\ by\ the\ user,\ to\ an\ ArrayList.\n\ @param\ borough\ A\ toggle\ button\ of\ which\ the\ properties\ are\ wanted.\n
comment6.params=borough
comment6.target=java.lang.String\ getBoroughName(javafx.scene.control.ToggleButton)
comment6.text=\n\ Get\ the\ name\ of\ the\ borough\ which\ corresponds\ to\ the\ toggle\ button\ passed\ in.\n\ @param\ borough\ The\ toggle\ button\ of\ which\ the\ corresponding\ borough\ name\ is\ wanted.\n\ @return\ The\ borough\ name\ as\ a\ String.\n
comment7.params=borough
comment7.target=void\ buttonColour(javafx.scene.control.ToggleButton)
comment7.text=\n\ Change\ the\ colour\ of\ the\ toggle\ button\ depending\ on\ the\ number\ of\ total\ properties\ available\ in\ that\ borough.\n\ @param\ borough\ The\ toggle\ button\ of\ which\ the\ colour\ is\ wanted\ to\ be\ changed.\n
comment8.params=event
comment8.target=void\ toggleButton(javafx.event.ActionEvent)
comment8.text=\n\ When\ a\ toggle\ button\ is\ pressed,\ if\ the\ filters\ are\ not\ valid\ an\ alert\ will\ show.\n\ If\ the\ filters\ are\ valid,\ the\ selected\ toggle\ button\ is\ check\ for\ and\ the\ gui\ is\ updated\n\ with\ the\ corresponding\ information\ to\ that\ toggle\ button.\n
comment9.params=
comment9.target=javafx.scene.control.ToggleButton\ getSelected()
comment9.text=\n\ Get\ the\ selected\ toggle\ button.\n\ @return\ The\ selected\ toggle\ button\ or\ null\ if\ there\ is\ no\ selected\ toggle\ button.\n
numComments=17
